{"version":3,"sources":["components/Todo/index.js","redux/actions.js","redux/selectors.js","components/TodoList/index.js","components/Filters/index.js","App.js","components/TodoList/TodosSlice.js","components/Filters/FiltersSlice.js","redux/reducer.js","redux/store.js","index.js"],"names":["priorityColorMapping","High","Medium","Low","Todo","name","prioriry","completed","id","useState","checked","setChecked","dispatch","useDispatch","justify","style","marginBottom","opacity","textDecoration","onChange","type","payload","color","margin","todosRemainingSelector","createSelector","state","todoList","filters","status","search","priorities","searchText","filter","todo","length","includes","priority","TodoList","todoName","setTodoName","setPriority","useSelector","height","span","overflowY","map","Group","display","compact","value","e","target","defaultValue","Option","label","onClick","uuidv4","Search","Input","Filters","setSearchText","filterStatus","setFilterStatus","filterPriorities","setFilterPriorities","Paragraph","fontWeight","marginTop","placeholder","sm","mode","allowClear","width","Title","Typography","App","flexDirection","backgroundColor","padding","boxShadow","borderRadius","textAlign","initState","todoListReducer","action","filtersReducer","rootReducer","combineReducers","composedEnhancers","composeWithDevTools","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"uUAIMA,EAAuB,CAC1BC,KAAM,MACNC,OAAQ,OACRC,IAAK,QAGO,SAASC,EAAT,GAAkD,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,UAAWC,EAAM,EAANA,GAEvD,EAA8BC,mBAASF,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,cAMjB,OACG,eAAC,IAAD,CACGC,QAAQ,gBACRC,MAAK,aACFC,aAAc,GACVN,EAAU,CAAEO,QAAS,GAAKC,eAAgB,gBAAmB,CAAC,GAJxE,UAOG,cAAC,IAAD,CAAUR,QAASA,EAASS,SAbX,WACpBR,GAAYD,GACZE,ECRI,CACJQ,KAAK,4BACLC,QDM0Bb,GAC5B,EAUK,SACIH,IAEJ,cAAC,IAAD,CAAKiB,MAAOtB,EAAqBM,GAAWS,MAAO,CAAEQ,OAAQ,GAA7D,SACIjB,MAIZ,C,sBE5BYkB,EAAyBC,aAFN,SAACC,GAAD,OAAWA,EAAMC,QAAjB,IAFI,SAACD,GAAD,OAAWA,EAAME,QAAQC,MAAzB,IADF,SAACH,GAAD,OAAWA,EAAME,QAAQE,MAAzB,IAEM,SAACJ,GAAD,OAAWA,EAAME,QAAQG,UAAzB,IAQrC,SAACJ,EAAUE,EAAQG,EAAYD,GAC5B,OAAOJ,EAASM,QAAO,SAACC,GACrB,MAAe,QAAXL,EACME,EAAWI,OACbD,EAAK7B,KAAK+B,SAASJ,IAAeD,EAAWK,SAASF,EAAKG,UAC3DH,EAAK7B,KAAK+B,SAASJ,GAIxBE,EAAK7B,KAAK+B,SAASJ,KACP,cAAXH,EAAyBK,EAAK3B,WAAa2B,EAAK3B,cAChDwB,EAAWI,QAASJ,EAAWK,SAASF,EAAKG,UAEnD,GACH,ICnBW,SAASC,IACrB,MAAgC7B,mBAAS,IAAzC,mBAAO8B,EAAP,KAAiBC,EAAjB,KACA,EAAgC/B,mBAAS,UAAzC,mBAAO4B,EAAP,KAAiBI,EAAjB,KAEMd,EAAWe,YAAYlB,GACvBZ,EAAWC,cAwBjB,OACG,eAAC,IAAD,CAAKE,MAAO,CAAE4B,OAAQ,qBAAtB,UACG,cAAC,IAAD,CAAKC,KAAM,GAAI7B,MAAO,CAAE4B,OAAQ,oBAAqBE,UAAW,QAAhE,SACIlB,EAASmB,KAAI,SAACZ,GAAD,OACX,cAAC9B,EAAD,CAEGI,GAAI0B,EAAK1B,GACTH,KAAM6B,EAAK7B,KACXC,SAAU4B,EAAKG,SACf9B,UAAW2B,EAAK3B,WAJX2B,EAAK1B,GAFF,MAUjB,cAAC,IAAD,CAAKoC,KAAM,GAAX,SACG,eAAC,IAAMG,MAAP,CAAahC,MAAO,CAAEiC,QAAS,QAAUC,SAAO,EAAhD,UACG,cAAC,IAAD,CAAOC,MAAOX,EAAUpB,SAvBV,SAACgC,GACxBX,EAAYW,EAAEC,OAAOF,MACvB,IAsBW,eAAC,IAAD,CACGG,aAAa,SACbH,MAAOb,EACPlB,SAvBc,SAAC+B,GAC3BT,EAAYS,EACd,EAkBW,UAKG,cAAC,IAAOI,OAAR,CAAeJ,MAAM,OAAOK,MAAM,OAAlC,SACG,cAAC,IAAD,CAAKjC,MAAM,MAAX,oBAEH,cAAC,IAAOgC,OAAR,CAAeJ,MAAM,SAASK,MAAM,SAApC,SACG,cAAC,IAAD,CAAKjC,MAAM,OAAX,sBAEH,cAAC,IAAOgC,OAAR,CAAeJ,MAAM,MAAMK,MAAM,MAAjC,SACG,cAAC,IAAD,CAAKjC,MAAM,OAAX,sBAGN,cAAC,IAAD,CAAQF,KAAK,UAAUoC,QArDN,WAC1B5C,EFdI,CACJQ,KAAM,mBACNC,QEaW,CACLb,GAAIiD,cACJpD,KAAMkC,EACNF,SAAUA,EACV9B,WAAW,KAIjBiC,EAAY,IACZC,EAAY,SACd,EAyCW,wBAOd,C,aClEOiB,EAAWC,IAAXD,OAEO,SAASE,IAErB,MAAoCnD,mBAAS,IAA7C,mBAAOuB,EAAP,KAAmB6B,EAAnB,KACA,EAAwCpD,mBAAS,OAAjD,mBAAOqD,EAAP,KAAqBC,EAArB,KACA,EAAgDtD,mBAAS,IAAzD,mBAAOuD,EAAP,KAAyBC,EAAzB,KACMrD,EAAWC,cAejB,OACG,eAAC,IAAD,CAAKC,QAAQ,SAAb,UACG,eAAC,IAAD,CAAK8B,KAAM,GAAX,UACG,cAAC,IAAWsB,UAAZ,CACGnD,MAAO,CAAEoD,WAAY,OAAQnD,aAAc,EAAGoD,UAAW,IAD5D,oBAKA,cAACV,EAAD,CACGW,YAAY,oBACZnB,MAAOlB,EACPb,SAzBmB,SAACgC,GAC7BU,EAAcV,EAAEC,OAAOF,OACvBtC,EHHI,CACJQ,KAAM,6BACNC,QGC4B8B,EAAEC,OAAOF,OACvC,OAyBK,eAAC,IAAD,CAAKoB,GAAI,GAAT,UACG,cAAC,IAAWJ,UAAZ,CACGnD,MAAO,CAAEoD,WAAY,OAAQnD,aAAc,EAAGoD,UAAW,IAD5D,8BAKA,eAAC,IAAMrB,MAAP,CAAaG,MAAOY,EAAc3C,SA7BhB,SAACgC,GACzBY,EAAgBZ,EAAEC,OAAOF,OACzBtC,EHDI,CACJQ,KAAM,6BACNC,QGD4B8B,EAAEC,OAAOF,OACvC,EA0BQ,UACG,cAAC,IAAD,CAAOA,MAAM,MAAb,iBACA,cAAC,IAAD,CAAOA,MAAM,YAAb,uBACA,cAAC,IAAD,CAAOA,MAAM,OAAb,yBAGN,eAAC,IAAD,CAAKoB,GAAI,GAAT,UACG,cAAC,IAAWJ,UAAZ,CACGnD,MAAO,CAAEoD,WAAY,OAAQnD,aAAc,EAAGoD,UAAW,IAD5D,gCAKA,eAAC,IAAD,CACGG,KAAK,WACLC,YAAU,EACVH,YAAY,gBACZtD,MAAO,CAAE0D,MAAO,QAChBvB,MAAOc,EACP7C,SA1CiB,SAAC+B,GAC3Be,EAAoBf,GACpBtC,EHCI,CACJQ,KAAM,iCACNC,QGH8B6B,GAChC,EAiCQ,UAQG,cAAC,IAAOI,OAAR,CAAeJ,MAAM,OAAOK,MAAM,OAAlC,SACG,cAAC,IAAD,CAAKjC,MAAM,MAAX,oBAEH,cAAC,IAAOgC,OAAR,CAAeJ,MAAM,SAASK,MAAM,SAApC,SACG,cAAC,IAAD,CAAKjC,MAAM,OAAX,sBAEH,cAAC,IAAOgC,OAAR,CAAeJ,MAAM,MAAMK,MAAM,MAAjC,SACG,cAAC,IAAD,CAAKjC,MAAM,OAAX,2BAMjB,CC9ED,IAAQoD,EAAUC,IAAVD,MAyBOE,MAvBf,WACG,OACG,sBACG7D,MAAO,CACJ0D,MAAO,IACPlD,OAAQ,SACRyB,QAAS,OACT6B,cAAe,SACfC,gBAAiB,QACjBC,QAAS,GACTC,UAAW,uBACXC,aAAc,EACdtC,OAAQ,QAVd,UAaG,cAAC+B,EAAD,CAAO3D,MAAO,CAAEmE,UAAW,UAA3B,iCACA,cAACtB,EAAD,IACA,cAAC,IAAD,IACA,cAACtB,EAAD,MAGR,E,eC5BK6C,EAAY,CACf,CAAE3E,GAAI,EAAGH,KAAM,aAAcE,WAAW,EAAO8B,SAAU,UACzD,CAAE7B,GAAI,EAAGH,KAAM,cAAeE,WAAW,EAAM8B,SAAU,QACzD,CAAE7B,GAAI,EAAGH,KAAM,mBAAoBE,WAAW,EAAO8B,SAAU,QAmBnD+C,EAhBS,WAAgC,IAA/B1D,EAA8B,uDAAtByD,EAAWE,EAAW,uCACpD,OAAQA,EAAOjE,MACZ,IAAK,mBACF,MAAM,GAAN,mBAAWM,GAAX,CAAkB2D,EAAOhE,UAE5B,IAAK,4BACF,OAAOK,EAAMoB,KAAI,SAACZ,GAAD,OACdA,EAAK1B,KAAO6E,EAAOhE,QAAnB,2BACUa,GADV,IACgB3B,WAAY2B,EAAK3B,YAC5B2B,CAHS,IAKpB,QACG,OAAOR,EAEf,ECpBKyD,EAAY,CACfrD,OAAQ,GACRD,OAAQ,MACRE,WAAY,IAwBAuD,EAtBQ,WAAgC,IAA/B5D,EAA8B,uDAAtByD,EAAWE,EAAW,uCACnD,OAAQA,EAAOjE,MACZ,IAAK,6BACF,OAAO,2BACDM,GADN,IAEGI,OAAQuD,EAAOhE,UAErB,IAAK,6BACF,OAAO,2BACDK,GADN,IAEGG,OAAQwD,EAAOhE,UAErB,IAAK,iCACF,OAAO,2BACDK,GADN,IAEGK,WAAYsD,EAAOhE,UAEzB,QACG,OAAOK,EAEf,ECjBc6D,EALKC,0BAAgB,CACjC5D,QAAS0D,EACT3D,SAAUyD,I,SCDPK,EAAoBC,gCAIXC,EAFDC,sBAAYL,EAAaE,GCCvCI,IAASC,OACN,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACG,cAAC,EAAD,MAEHI,SAASC,eAAe,Q","file":"static/js/main.befcdd66.chunk.js","sourcesContent":["import { Row, Tag, Checkbox } from 'antd';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toggleTodoStatus } from '../../redux/actions';\r\nconst priorityColorMapping = {\r\n   High: 'red',\r\n   Medium: 'blue',\r\n   Low: 'gray',\r\n};\r\n\r\nexport default function Todo({ name, prioriry, completed, id }) {\r\n\r\n   const [checked, setChecked] = useState(completed);\r\n   const dispatch = useDispatch();\r\n   const toggleCheckbox = () => {\r\n      setChecked(!checked);\r\n      dispatch(toggleTodoStatus(id));\r\n   };\r\n\r\n   return (\r\n      <Row\r\n         justify='space-between'\r\n         style={{\r\n            marginBottom: 3,\r\n            ...(checked ? { opacity: 0.5, textDecoration: 'line-through' } : {}),\r\n         }}\r\n      >\r\n         <Checkbox checked={checked} onChange={toggleCheckbox}>\r\n            {name}\r\n         </Checkbox>\r\n         <Tag color={priorityColorMapping[prioriry]} style={{ margin: 0 }}>\r\n            {prioriry}\r\n         </Tag>\r\n      </Row>\r\n   );\r\n}\r\n","export const addTodo = (data) => {\r\n   return {\r\n      type: 'todoList/addTodo',\r\n      payload: data,\r\n   };\r\n};\r\n\r\nexport const toggleTodoStatus = (todoId) =>{\r\n   return {\r\n      type:'todoList/toggleTodoStatus',\r\n      payload: todoId\r\n   }\r\n}\r\n\r\nexport const searchFilterChange = (text) => {\r\n   return {\r\n      type: 'filters/searchFilterChange',\r\n      payload: text\r\n   }\r\n};\r\n\r\nexport const statusFilterChange = (status) => {\r\n   return {\r\n      type: 'filters/statusFilterChange',\r\n      payload: status\r\n   }\r\n}\r\n\r\nexport const priorityFilterChange = (priorities) => {\r\n   return {\r\n      type: 'filters/prioritiesFilterChange',\r\n      payload: priorities,\r\n   };\r\n};\r\n\r\n","import { createSelector } from 'reselect';\r\n\r\nexport const searchTextSelector = (state) => state.filters.search;\r\nexport const filterStatusSelector = (state) => state.filters.status;\r\nexport const filterPrioritiesSelector = (state) => state.filters.priorities;\r\nexport const todoListSelector = (state) => state.todoList;\r\n\r\nexport const todosRemainingSelector = createSelector(\r\n   todoListSelector,\r\n   filterStatusSelector,\r\n   searchTextSelector,\r\n   filterPrioritiesSelector,\r\n   (todoList, status, searchText, priorities) => {\r\n      return todoList.filter((todo) => {\r\n         if (status === 'All') {\r\n            return priorities.length\r\n               ? todo.name.includes(searchText) && priorities.includes(todo.priority)\r\n               : todo.name.includes(searchText);\r\n         }\r\n\r\n         return (\r\n            todo.name.includes(searchText) &&\r\n            (status === 'Completed' ? todo.completed : !todo.completed) &&\r\n            (priorities.length ? priorities.includes(todo.priority) : true)\r\n         );\r\n      });\r\n   }\r\n);","import { Col, Row, Input, Button, Select, Tag } from 'antd';\r\nimport Todo from '../Todo';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addTodo } from '../../redux/actions';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useState } from 'react';\r\nimport { todosRemainingSelector } from '../../redux/selectors';\r\nexport default function TodoList() {\r\n   const [todoName, setTodoName] = useState('');\r\n   const [priority, setPriority] = useState('Medium');\r\n\r\n   const todoList = useSelector(todosRemainingSelector);\r\n   const dispatch = useDispatch();\r\n\r\n   const handleAddButtonClick = () => {\r\n      dispatch(\r\n         addTodo({\r\n            id: uuidv4(),\r\n            name: todoName,\r\n            priority: priority,\r\n            completed: false,\r\n         })\r\n      );\r\n\r\n      setTodoName('');\r\n      setPriority('Medium');\r\n   };\r\n\r\n   const handleInputChange = (e) => {\r\n      setTodoName(e.target.value);\r\n   };\r\n\r\n   const handlePriorityChange = (value) => {\r\n      setPriority(value);\r\n   };\r\n\r\n   return (\r\n      <Row style={{ height: 'calc(100% - 40px)' }}>\r\n         <Col span={24} style={{ height: 'calc(100% - 40px)', overflowY: 'auto' }}>\r\n            {todoList.map((todo) => (\r\n               <Todo\r\n                  key={todo.id}\r\n                  id={todo.id}\r\n                  name={todo.name}\r\n                  prioriry={todo.priority}\r\n                  completed={todo.completed}\r\n               />\r\n            ))}\r\n         </Col>\r\n         <Col span={24}>\r\n            <Input.Group style={{ display: 'flex' }} compact>\r\n               <Input value={todoName} onChange={handleInputChange} />\r\n               <Select\r\n                  defaultValue='Medium'\r\n                  value={priority}\r\n                  onChange={handlePriorityChange}\r\n               >\r\n                  <Select.Option value='High' label='High'>\r\n                     <Tag color='red'>High</Tag>\r\n                  </Select.Option>\r\n                  <Select.Option value='Medium' label='Medium'>\r\n                     <Tag color='blue'>Medium</Tag>\r\n                  </Select.Option>\r\n                  <Select.Option value='Low' label='Low'>\r\n                     <Tag color='gray'>Low</Tag>\r\n                  </Select.Option>\r\n               </Select>\r\n               <Button type='primary' onClick={handleAddButtonClick}>\r\n                  Add\r\n               </Button>\r\n            </Input.Group>\r\n         </Col>\r\n      </Row>\r\n   );\r\n}\r\n","import { Col, Row, Input, Typography, Radio, Select, Tag } from 'antd';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { \r\n   searchFilterChange, \r\n   statusFilterChange, \r\n   priorityFilterChange \r\n} from '../../redux/actions'\r\nconst { Search } = Input;\r\n\r\nexport default function Filters() {\r\n\r\n   const [searchText, setSearchText] = useState('');\r\n   const [filterStatus, setFilterStatus] = useState('All');\r\n   const [filterPriorities, setFilterPriorities] = useState([]);\r\n   const dispatch = useDispatch();\r\n   const handleSearchTextChange = (e) => {\r\n      setSearchText(e.target.value);\r\n      dispatch(searchFilterChange(e.target.value))\r\n   }\r\n\r\n   const handleFilterChange = (e) => {\r\n      setFilterStatus(e.target.value);\r\n      dispatch(statusFilterChange(e.target.value));\r\n   }\r\n\r\n   const handlePriorityChange = (value) => {\r\n      setFilterPriorities(value);\r\n      dispatch(priorityFilterChange(value))\r\n   }\r\n   return (\r\n      <Row justify='center'>\r\n         <Col span={24}>\r\n            <Typography.Paragraph\r\n               style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}\r\n            >\r\n               Search\r\n            </Typography.Paragraph>\r\n            <Search\r\n               placeholder='input search text'\r\n               value={searchText}\r\n               onChange={handleSearchTextChange}\r\n            />\r\n         </Col>\r\n         <Col sm={24}>\r\n            <Typography.Paragraph\r\n               style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}\r\n            >\r\n               Filter By Status\r\n            </Typography.Paragraph>\r\n            <Radio.Group value={filterStatus} onChange={handleFilterChange}>\r\n               <Radio value='All'>All</Radio>\r\n               <Radio value='Completed'>Completed</Radio>\r\n               <Radio value='Todo'>To do</Radio>\r\n            </Radio.Group>\r\n         </Col>\r\n         <Col sm={24}>\r\n            <Typography.Paragraph\r\n               style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}\r\n            >\r\n               Filter By Priority\r\n            </Typography.Paragraph>\r\n            <Select\r\n               mode='multiple'\r\n               allowClear\r\n               placeholder='Please select'\r\n               style={{ width: '100%' }}\r\n               value={filterPriorities}\r\n               onChange={handlePriorityChange}\r\n            >\r\n               <Select.Option value='High' label='High'>\r\n                  <Tag color='red'>High</Tag>\r\n               </Select.Option>\r\n               <Select.Option value='Medium' label='Medium'>\r\n                  <Tag color='blue'>Medium</Tag>\r\n               </Select.Option>\r\n               <Select.Option value='Low' label='Low'>\r\n                  <Tag color='gray'>Low</Tag>\r\n               </Select.Option>\r\n            </Select>\r\n         </Col>\r\n      </Row>\r\n   );\r\n}","import { Typography, Divider } from 'antd';\nimport './App.css';\nimport TodoList from './components/TodoList';\nimport Filters from './components/Filters';\n\nconst { Title } = Typography;\n\nfunction App() {\n   return (\n      <div\n         style={{\n            width: 500,\n            margin: '0 auto',\n            display: 'flex',\n            flexDirection: 'column',\n            backgroundColor: 'white',\n            padding: 20,\n            boxShadow: '0 0 10px 4px #bfbfbf',\n            borderRadius: 5,\n            height: '90vh',\n         }}\n      >\n         <Title style={{ textAlign: 'center' }}>TODO APP with REDUX</Title>\n         <Filters />\n         <Divider />\n         <TodoList />\n      </div>\n   );\n}\n\nexport default App;","const initState = [\r\n   { id: 1, name: 'Learn Yoga', completed: false, priority: 'Medium' },\r\n   { id: 2, name: 'Learn Redux', completed: true, priority: 'High' },\r\n   { id: 3, name: 'Learn JavaScript', completed: false, priority: 'Low' },\r\n];\r\n\r\nconst todoListReducer = (state = initState, action) => {\r\n   switch (action.type) {\r\n      case 'todoList/addTodo':\r\n         return [...state, action.payload];\r\n\r\n      case 'todoList/toggleTodoStatus':\r\n         return state.map((todo) =>\r\n            todo.id === action.payload\r\n               ? { ...todo, completed: !todo.completed }\r\n               : todo\r\n         );\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\nexport default todoListReducer;\r\n","const initState = {\r\n   search: '',\r\n   status: 'All',\r\n   priorities: [],\r\n};\r\nconst filtersReducer = (state = initState, action) => {\r\n   switch (action.type) {\r\n      case 'filters/searchFilterChange':\r\n         return {\r\n            ...state,\r\n            search: action.payload,\r\n         };\r\n      case 'filters/statusFilterChange':\r\n         return {\r\n            ...state,\r\n            status: action.payload,\r\n         };\r\n      case 'filters/prioritiesFilterChange':\r\n         return {\r\n            ...state,\r\n            priorities: action.payload\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport default filtersReducer;","import { combineReducers } from 'redux';\r\nimport todoListReducer from '../components/TodoList/TodosSlice';\r\nimport filtersReducer from '../components/Filters/FiltersSlice';\r\nconst rootReducer = combineReducers({\r\n   filters: filtersReducer,\r\n   todoList: todoListReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from 'redux';\r\nimport rootReducer from './reducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst composedEnhancers = composeWithDevTools();\r\n\r\nconst store = createStore(rootReducer, composedEnhancers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n   document.getElementById('root')\n);\n"],"sourceRoot":""}